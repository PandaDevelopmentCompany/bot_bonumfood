# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
import telebot
import webbrowser
from telebot import types
import random
from random import choice
import requests
from bs4 import BeautifulSoup

# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å
bot = telebot.TeleBot('############################################')



# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã start —Å–æ –≤—Å—Ç–æ–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ë–æ–Ω—É–º –§—É–¥ üíÅüèº‚Äç‚ôÇÔ∏è')
    markup.row(btn1)
    btn2 = types.KeyboardButton('–ü—Ä–æ–¥—É–∫—Ü–∏—è –ë–æ–Ω—É–º –§—É–¥ üçï')
    btn3 = types.KeyboardButton('–ù–æ–≤–∏–Ω–∫–∏ –≤ –ë–æ–Ω—É–º –§—É–¥ üî•')
    markup.row(btn2, btn3)
    markup.add(types.KeyboardButton('–ó–∞–ø—Ä–æ—Å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üì®'))
    markup.add(types.KeyboardButton('–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ ü§ù'))
    btn4 = types.KeyboardButton('–ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å üíö')
    btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç üåç')
    markup.row(btn4, btn5)
    markup.add(types.KeyboardButton('–ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π üíå'))
    bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!üíö\r\n–ó–¥–µ—Å—å –µ—Å—Ç—å –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ –ë–æ–Ω—É–º –§—É–¥ üìó \r\n–ë—É–¥—É —Ä–∞–¥ –≤–∞–º –ø–æ–º–æ—á—å üí¨ \r\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª üì≤', reply_markup=markup)
    # bot.register_next_step_handler(message, on_click)




@bot.message_handler(content_types=['text'])
def get_text_messages(message):

    # –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏
    chat_id = message.chat.id
    if message.chat.type == 'private':
        if message.text == 'qwe':
            url = "https://bonumfood.ru/product-category/–¥–æ–ª–∏–Ω–∞-—Å–æ–ª–Ω—Ü–∞/–æ—Å–µ—Ç–∏–Ω—Å–∫–∏–µ-–ø–∏—Ä–æ–≥–∏/"
            response = requests.get(url)
            soup = BeautifulSoup(response.text, "html.parser")
            section = soup.find_all("ul", class_="products")
            for products in section:
                product = products.find_all("li", class_="product")
                for item in product:
                    product_name = item.find("h4", class_="mfn-woo-product-title").get_text(strip=True)
                    product_link = item.find("a").get("href")
                    # print(product_name, product_link)
                    all_products = f"{product_name}\n–°—Å—ã–ª–∫–∞: {product_link}\n "
                    bot.send_message(chat_id, all_products)



        if message.text == '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ë–æ–Ω—É–º –§—É–¥ üíÅüèº‚Äç‚ôÇÔ∏è':
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏ üåç', url='https://bonumfood.ru')
            markup.row(btn1)
            bot.send_message(message.chat.id, '–°–µ–∫—É–Ω–¥–æ—á–∫—É.. –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ! ü§ì \r\n–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ: ', reply_markup=markup)
            file = open('./video.mp4', 'rb')
            bot.send_video(message.chat.id, file)

        elif message.text == '–ü—Ä–æ–¥—É–∫—Ü–∏—è –ë–æ–Ω—É–º –§—É–¥ üçï' :
            markup = types.InlineKeyboardMarkup()
            btn2_2 = types.InlineKeyboardButton('–ü–∏—Ü—Ü–∞ üçï', callback_data='something_function_2')
            btn3_3 = types.InlineKeyboardButton('–û—Å–µ—Ç–∏–Ω—Å–∫–∏–µ –ø–∏—Ä–æ–≥–∏ ü•ß', callback_data='something_function_3')
            markup.row(btn2_2)
            markup.row(btn3_3)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥—É–∫—Ü–∏–∏: üîú ', reply_markup=markup)



        elif message.text == '–ù–æ–≤–∏–Ω–∫–∏ –≤ –ë–æ–Ω—É–º –§—É–¥ üî•':
            markup = types.InlineKeyboardMarkup()
            bot.send_message(message.chat.id, '–î–ª—è –≤–∞—Å –ë–æ–Ω—É–º –§—É–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤–∏–Ω–∫–∏: üîú ', reply_markup=markup)

        elif message.text == '–ó–∞–ø—Ä–æ—Å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üì®':
            markup = types.InlineKeyboardMarkup()
            btn10 = types.InlineKeyboardButton('–í —Ç–µ–ª–µ–≥—Ä–∞–º', callback_data='something_function_2')
            btn11 = types.InlineKeyboardButton('–ù–∞ –ø–æ—á—Ç—É', callback_data='something_function_3')
            markup.row(btn10)
            markup.row(btn11)
            bot.send_message(message.chat.id, '–ö—É–¥–∞ –≤—ã—Å–ª–∞—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ? üîú ', reply_markup=markup)

        elif message.text == '–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ ü§ù':
            bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞–º? –ù–∞–ø–∏—à–∏—Ç–µ üîú ')

        elif message.text == '–ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å üíö':
            markup = types.InlineKeyboardMarkup()
            btn12 = types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º ‚ÅâÔ∏è', callback_data='something_function_2')
            btn13 = types.InlineKeyboardButton('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É üìû', callback_data='something_function_3')
            markup.row(btn12)
            markup.row(btn13)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥—É–∫—Ü–∏–∏: üîú ', reply_markup=markup)

        elif message.text == '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç üåç':
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('BonumFood.ru', url='https://bonumfood.ru')
            markup.row(btn1)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏ üîú',
                             reply_markup=markup)

        elif message.text == '–ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π üíå':
            markup = types.InlineKeyboardMarkup()
            btn14 = types.InlineKeyboardButton('–ù–∞ –ø–æ—á—Ç—É üì©', callback_data='something_function_2')
            btn15 = types.InlineKeyboardButton('–í –¢–µ–ª–µ–≥—Ä–∞–º ', callback_data='something_function_3')
            markup.row(btn14)
            markup.row(btn15)
            bot.send_message(message.chat.id, '–ö—É–¥–∞ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø–∏—Å—å–º–∞? ', reply_markup=markup)



        # –ö–æ–º–∞–Ω–¥—ã
        elif message.text == '/site':
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('BonumFood.ru', url='https://bonumfood.ru')
            markup.row(btn1)
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏ üåç',
                             reply_markup=markup)


        elif message.text == '/about':
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏ üåç', url='https://bonumfood.ru')
            markup.row(btn1)
            bot.send_message(message.chat.id, '–°–µ–∫—É–Ω–¥–æ—á–∫—É.. –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ! ü§ì \r\n–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ: ', reply_markup=markup)
            file = open('./video.mp4', 'rb')
            bot.send_video(message.chat.id, file)





            # Small talk
        elif message.text == '–ü—Ä–∏–≤–µ—Ç!':
            bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!')

        elif message.text == '–ü—Ä–∏–≤–µ—Ç':
            bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!')

        elif message.text == '–ø—Ä–∏–≤–µ—Ç!':
            bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!')

        elif message.text == '–ø—Ä–∏–≤–µ—Ç':
            bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç!')

        elif message.text == '–∫–∞–∫ –¥–µ–ª–∞?':
            bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ!')

        elif message.text == '–ö–∞–∫ –¥–µ–ª–∞?':
            bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ!')

        elif message.text == '–ß—Ç–æ –¥–µ–ª–∞–µ—à—å?':
            bot.send_message(message.from_user.id, '–ü–æ–º–æ–≥–∞—é –ª—é–¥—è–º!')

        elif message.text == '—á—Ç–æ –¥–µ–ª–∞–µ—à—å?':
            bot.send_message(message.from_user.id, '–ü–æ–º–æ–≥–∞—é –ª—é–¥—è–º!')

        elif message.text == '—á—Ç–æ –¥–µ–ª–∞–µ—à—å':
            bot.send_message(message.from_user.id, '–ü–æ–º–æ–≥–∞—é –ª—é–¥—è–º!')

        elif message.text == '—á–µ –¥–µ–ª–∞–µ—à—å?':
            bot.send_message(message.from_user.id, '–ü–æ–º–æ–≥–∞—é –ª—é–¥—è–º!')

        elif message.text == '—á–µ –¥–µ–ª–∞–µ—à—å':
            bot.send_message(message.from_user.id, '–ü–æ–º–æ–≥–∞—é –ª—é–¥—è–º!')

        elif message.text == '–∫–∞–∫ –¥–µ–ª–∞':
            bot.send_message(message.from_user.id, '–•–æ—Ä–æ—à–æ!')









# –ü–µ—Ä–µ–Ω–∞–ø—Ä–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —Å–∞–π—Ç –ø–æ –∫–æ–º–∞–Ω–¥–µ /site
# @bot.message_handler(commands=['startbot', 'website'])
# def startbot(message):
#     bot.send_message(message.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}! –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏')
#
# @bot.message_handler(commands=['site', 'website'])
# def site(message):
#     webbrowser.open('https://bonumfood.ru')
#
# @bot.message_handler(commands=['about'])
# def AboutCompany(message):
#     webbrowser.open('https://bonumfood.ru')
#
# @bot.message_handler(commands=['products'])
# def ProductsBonumFood(message):
#     webbrowser.open('https://bonumfood.ru')
#
# @bot.message_handler(commands=['newsproducts'])
# def NewProductsBonumFood(message):
#     webbrowser.open('https://bonumfood.ru')
#
# @bot.message_handler(commands=['offer'])
# def OfferBonumFood(message):
#     webbrowser.open('https://bonumfood.ru')
#
# @bot.message_handler(commands=['myquestion'])
# def YourQuestion(message):
#     webbrowser.open('https://bonumfood.ru')
#
# @bot.message_handler(commands=['subscribe'])
# def Subscribe(message):
#     webbrowser.open('https://bonumfood.ru')
#








# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç
# @bot.message_handler(commands=['start'])
# def main(message):
#     markup = types.InlineKeyboardMarkup()
#     btn1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏', url='https://bonumfood.ru')
#     markup.row(btn1)
#     btn2 = types.InlineKeyboardButton('Item Button 2', callback_data='something_function_2')
#     btn3 = types.InlineKeyboardButton('Item Button 3', callback_data='something_function_3')
#     markup.row(btn2, btn3)
#     markup.add(types.InlineKeyboardButton('Item Button 4', callback_data='something_function_4'))
#     markup.add(types.InlineKeyboardButton('Item Button 5', callback_data='something_function_5'))
#     markup.add(types.InlineKeyboardButton('Item Button 6', callback_data='something_function_6'))
#     bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –í—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç', reply_markup=markup)

 # –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback_data
#  @bot.callback_query_handler(func=lambda callback: True)
# def callback_message(callback):
#      if callback.data == 'something_function_6':
#          bot.send_message(message.chat.id, '–ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')


 #    markup.add(types.InlineKeyboardButton('Item Button 1', callback_data='something_function'))
 #    markup.add(types.InlineKeyboardButton('Item Button 2', callback_data='something_function'))
 #    markup.add(types.InlineKeyboardButton('Item Button 3', callback_data='something_function'))
 #    markup.add(types.InlineKeyboardButton('Item Button 4', callback_data='something_function'))





# @bot.message_handler(commands=['start'])
# def main(message):
#     bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name}')
#     markup = types.InlineKeyboardMarkup()
#     markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏', url='https://bonumfood.ru'))

# –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–ª–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
# @bot.message_handler()
# def info(message):
#     if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
#         bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name}')
#     elif message.text.lower() == 'id':
#         bot.reply_to(message, f'ID: {message.from_user.id}')







#
# @bot.message_handler(commands=['help_help'])
# def main(message):
#     bot.send_message(message.chat.id, '<u>information</u>', parse_mode='html')
#
#
# @bot.message_handler(commands=['startmessage'])
# def main(message):
#     bot.send_message(message.chat.id, message)



# —á—Ç–æ–±—ã –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª –Ω–µ –ø—Ä–µ–∫—Ä–∞—â–∞—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª–∞—Å—å
# –ª–∏–±–æ bot.infinity_poling()
bot.polling(none_stop=True)